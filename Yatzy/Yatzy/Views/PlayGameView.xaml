<UserControl x:Class="Yatzy.Views.PlayGameView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Views="clr-namespace:Yatzy.Views"
             xmlns:ViewModels="clr-namespace:Yatzy.ViewModels"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:gif="http://wpfanimatedgif.codeplex.com"
    mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920">
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type ViewModels:MainMenuViewModel}">
            <Views:MainMenuView Content="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type ViewModels:CreateGameViewModel}">
            <Views:CreateGameView Content="Binding"/>
        </DataTemplate>

        <Image x:Key="RollingDice" gif:ImageBehavior.AnimatedSource="/Resources/Images/RollingDiceGif.gif" gif:ImageBehavior.RepeatBehavior="Forever"/>

        <Storyboard x:Key="RollDice1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice1}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="380.75"/>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice1}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-202.141"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice2}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-79.626"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice2}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-230.514"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice3">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice3}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-380.245"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice3}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-240.141"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice4">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice4}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-420.266"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice4}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="63.617"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice5">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice5}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-360.38"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice5}">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-490.894"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice5_Copy1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice5}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice5}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice1_Copy1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice1}" >
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice1}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice2_Copy1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice2}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice2}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice3_Copy1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice3}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice3}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RollDice4_Copy1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.Target="{Binding ElementName=btnDice4}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.Target="{Binding ElementName=btnDice4}">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>


    <Grid ShowGridLines="False">

        
        <Grid.Background>
            <ImageBrush ImageSource="/Resources/wood4.jpg"/>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*"/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="12*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--Grid för tärningar och kasta knapp-->
        <Grid x:Name="DiceBoard" ShowGridLines="False" Grid.Column="1" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>

            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="FontSize" Value="30"/>
                    <Setter Property="BorderThickness" Value="5"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Margin" Value="5,0,5,0"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Label Content="{Binding ActivePlayer.Nickname}" Grid.Column="1" IsHitTestVisible="False" Grid.ColumnSpan="5" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="75" Foreground="AntiqueWhite">
                <Label.Effect>
                    <DropShadowEffect Opacity="0.75" Direction="270" BlurRadius="7" ShadowDepth="3"/>
                </Label.Effect>
            </Label>

            
            
            <Button x:Name="btnDice1" Grid.Row="6" Grid.Column="1"  Command="{Binding SaveDiceCommand}" CommandParameter="1" RenderTransformOrigin="0.5,0.5" Click="BtnDice1_Click" BorderBrush="Transparent">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Dices[0].DiceValue}" Value="0">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[0].IsDiceEnabled}" Value="false">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[0].IsDiceEnabled}" Value="true">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Image Source="{Binding Dices[0].DiceImage, UpdateSourceTrigger=PropertyChanged}" />
            </Button>
            <Button x:Name="btnDice2" Grid.Row="6" Grid.Column="2" Command="{Binding SaveDiceCommand}" CommandParameter="2" RenderTransformOrigin="0.5,0.5" Click="BtnDice2_Click" BorderBrush="Transparent">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Dices[1].DiceValue}" Value="0">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[1].IsDiceEnabled}" Value="false">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[1].IsDiceEnabled}" Value="true">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Image Source="{Binding Dices[1].DiceImage, UpdateSourceTrigger=PropertyChanged}" />
            </Button>
            <Button x:Name="btnDice3" Grid.Row="6" Grid.Column="3" Command="{Binding SaveDiceCommand}" CommandParameter="3" RenderTransformOrigin="0.5,0.5" Click="BtnDice3_Click" BorderBrush="Transparent">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Dices[2].DiceValue}" Value="0">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[2].IsDiceEnabled}" Value="false">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[2].IsDiceEnabled}" Value="true">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Image Source="{Binding Dices[2].DiceImage, UpdateSourceTrigger=PropertyChanged}" />
            </Button>
            <Button x:Name="btnDice4" Grid.Row="6" Grid.Column="4" Command="{Binding SaveDiceCommand}" CommandParameter="4" RenderTransformOrigin="0.5,0.5" Click="BtnDice4_Click" BorderBrush="Transparent">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Dices[3].DiceValue}" Value="0">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[3].IsDiceEnabled}" Value="false">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[3].IsDiceEnabled}" Value="true">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>


                <Image Source="{Binding Dices[3].DiceImage, UpdateSourceTrigger=PropertyChanged}" />
            </Button>
            <Button x:Name="btnDice5" Grid.Row="6" Grid.Column="5" Command="{Binding SaveDiceCommand}" CommandParameter="5" RenderTransformOrigin="0.5,0.5" Click="BtnDice5_Click" BorderBrush="Transparent">
                <Button.Style>
                    <Style TargetType="Button">

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Dices[4].DiceValue}" Value="0">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[4].IsDiceEnabled}" Value="false">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Dices[4].IsDiceEnabled}" Value="true">
                                <Setter Property="Background" Value="#00FFFFFF"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Image Source="{Binding Dices[4].DiceImage, UpdateSourceTrigger=PropertyChanged}" />
            </Button>

            <Button Style="{DynamicResource ThrowButton}" x:Name="Button" Command="{Binding RollDicesCommand}" Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="3" VerticalAlignment="Top" Margin="0,10,0,0" HorizontalAlignment="Center" Width="130" Height="45" Foreground="OrangeRed" Content="Kasta" Click="Button_Click" FontSize="28" FontFamily="Global Sans Serif"/>
            <Label Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="5" Content="{Binding ThrowsLeft}" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="25" Foreground="AntiqueWhite"/>
           
            <Label Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="5" IsHitTestVisible="False" Content="_________________________________________________________" Foreground="AntiqueWhite" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="50" Height="83" Margin="0,10"/>
        </Grid>



        <!--ListView x:Name="listView" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" Height="157" Margin="27,24,0,0" VerticalAlignment="Top" Width="199" ItemsSource="{Binding Dices}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="60" Header="Nummer" DisplayMemberBinding="{Binding DiceValue}"/>
                    <GridViewColumn Width="60" Header="Sparad" DisplayMemberBinding="{Binding IsDiceEnabled}"/>
                    <GridViewColumn Width="60" Header="ID" DisplayMemberBinding="{Binding DiceID}"/>
                </GridView>
            </ListView.View>
        </-->

        <StackPanel Width="59" Margin="0,20,0,0" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" >
            <Button Style="{DynamicResource EmptyCategoryButton}" Name="Empty" VerticalAlignment="Top" MinHeight="25" Background="Transparent" BorderBrush="Transparent" IsEnabled="False"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Ones}" Margin="0,5,5,0" Command="{Binding Ones}" CommandParameter="1" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_1"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Twos}" Margin="0,5,5,0" Command="{Binding Twos}" CommandParameter="2" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_2"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Threes}" Margin="0,5,5,0" Command="{Binding Threes}" CommandParameter="3" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_3"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Fours}" Margin="0,5,5,0" Command="{Binding Fours}" CommandParameter="4" VerticalAlignment="Top" MinHeight="40"  Click="Button_Click_4"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Fives}" Margin="0,5,5,0" Command="{Binding Fives}" CommandParameter="5" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_5"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Sixes}" Margin="0,5,5,0" Command="{Binding Sixes}" CommandParameter="6" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_6"/>
            <Button Style="{DynamicResource EmptyCategoryButton}" Name="Empty1" VerticalAlignment="Top" Margin="0,5,5,0" MinHeight="40" Background="Transparent" BorderBrush="Transparent" IsEnabled="False"/>
            <Button Style="{DynamicResource EmptyCategoryButton}" Name="Empty2" VerticalAlignment="Top" Margin="0,5,5,0" MinHeight="40" Background="Transparent" BorderBrush="Transparent" IsEnabled="False" />
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Pair}" Margin="0,5,5,0" Command="{Binding Pair}" CommandParameter="7" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_7"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.TwoPairs}" Margin="0,5,5,0" Command="{Binding TwoPair}" CommandParameter="8" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_8"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.ThreeOfaKind}" Margin="0,5,5,0" Command="{Binding Threeofakind}" CommandParameter="9" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_9"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.FourOfaKind}" Margin="0,5,5,0" Command="{Binding Fourofakind}" CommandParameter="10" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_10"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.SmalLadder}" Margin="0,5,5,0" Command="{Binding Smallstraight}" CommandParameter="11" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_11"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.LargeLadder}" Margin="0,5,5,0" Command="{Binding Largestraight}" CommandParameter="12" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_12"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.FullHouse}" Margin="0,5,5,0" Command="{Binding Fullhouse}" CommandParameter="13" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_13"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Chance}" Margin="0,5,5,0" Command="{Binding Chance}" CommandParameter="14" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_14"/>
            <Button Style="{DynamicResource CategoryButton}" Content="{Binding Path = Player.Yatzy}" Margin="0,5,5,0" Command="{Binding Yatzy}" CommandParameter="15" VerticalAlignment="Top" MinHeight="40" Click="Button_Click_15"/>

        </StackPanel>

        <Label x:Name="label" Grid.Row="0" Grid.Column="2" Content="{Binding Path = activePlayer.Firstname, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="22,20,0,0" VerticalAlignment="Top"/>

        <DataGrid x:Name="Datagrid1"  ItemsSource="{Binding Path=ActivePlayers}"  Grid.Column="2" Grid.Row="1" BorderThickness="2" BorderBrush="Black" FontSize="30" SelectionUnit="Cell"
                  IsReadOnly="True" CanUserSortColumns="False" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Top"
                  HorizontalGridLinesBrush="Black" VerticalGridLinesBrush="Black" MinRowHeight="80"  AutoGenerateColumns="False" CanUserAddRows="False"  HeadersVisibility="Column">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Gray"/>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1,1,2,1"/>


                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Spelare" Binding="{Binding Nickname}"  MinWidth="45" FontWeight="Bold" />
                <!--
                <DataGridTemplateColumn  Header="Ettor" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Ones}"/>
                                <Button Grid.Column="1" x:Name="btnOnes" Content="{Binding ElementName=Datagrid1, Path = Player.Ones}" Command="{Binding Path=DataContext.Ones, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid }}}" CommandParameter="1" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn> -->
                

                <!--Knapp i datagrid, nu funkar commandbindingen men inte Content binding
                <DataGridTextColumn  IsReadOnly="True" Binding="{Binding Ones}">
                    <DataGridTextColumn.Header>
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Ettor" />
                            <Button Grid.Column="1" x:Name="btnOnes" Content="{Binding Player.Ones}" Command="{Binding Path=DataContext.Ones, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid }}}" CommandParameter="1" Width="40" Height="30" Margin="30,0,0,0"/>
                        </Grid>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
              -->

                <DataGridTextColumn Header="Ettor" Binding="{Binding Ones}" MinWidth="45" />
                <DataGridTextColumn Header="Tvåor" Binding="{Binding Twos}" MinWidth="45"/>
                <DataGridTextColumn Header="Treor" Binding="{Binding Threes}" MinWidth="45"/>
                <DataGridTextColumn Header="Fyror" Binding="{Binding Fours}" MinWidth="45"/>
                <DataGridTextColumn Header="Femmor" Binding="{Binding Fives}" MinWidth="45"/>
                <DataGridTextColumn Header="Sexor" Binding="{Binding Sixes}" MinWidth="45"/>
                <DataGridTextColumn Header="Summa" Binding="{Binding UpperScore}" MinWidth="45" FontWeight="Bold"/>
                <DataGridTextColumn Header="Bonus" Binding="{Binding UpperBonus}" MinWidth="45" Foreground="Red" FontWeight="Bold"/>
                <DataGridTextColumn Header="Par" Binding="{Binding Pair}" MinWidth="45"/>
                <DataGridTextColumn Header="Två par" Binding="{Binding TwoPairs}" MinWidth="45"/>
                <DataGridTextColumn Header="Tretal" Binding="{Binding ThreeOfaKind}" MinWidth="45"/>
                <DataGridTextColumn Header="Fyrtal" Binding="{Binding FourOfaKind}" MinWidth="45"/>
                <DataGridTextColumn Header="Liten stege" Binding="{Binding SmalLadder}" MinWidth="45"/>
                <DataGridTextColumn Header="Stor stege" Binding="{Binding LargeLadder}" MinWidth="45"/>
                <DataGridTextColumn Header="Kåk" Binding="{Binding FullHouse}" MinWidth="45"/>
                <DataGridTextColumn Header="Chans" Binding="{Binding Chance}" MinWidth="45"/>
                <DataGridTextColumn Header="Yatzy" Binding="{Binding Yatzy}" MinWidth="45" Foreground="Red"/>
                <DataGridTextColumn Header="Total summa" Binding="{Binding TotalScore}" MinWidth="45" FontWeight="Bold" />
            </DataGrid.Columns>

            <!--Konverterar kolumnerna så de visas vertikalt istället för horisontellt-->
            <DataGrid.LayoutTransform>
                <TransformGroup>
                    <RotateTransform Angle="90"/>
                    <MatrixTransform Matrix="-1,0,0,1,0,0"/>
                </TransformGroup>
            </DataGrid.LayoutTransform>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <RotateTransform Angle="-90"/>
                                <ScaleTransform ScaleX="1" ScaleY="-1" />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle  >
                <Style TargetType="DataGridCell">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <RotateTransform Angle="-90"/>
                                <ScaleTransform ScaleX="1" ScaleY="-1" />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>
        <Button Style="{StaticResource TemplateButton1}" Command="{Binding QuitGameCommand}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Content="Avsluta spelet" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,20,0"/>
        <ContentControl Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="9" Grid.RowSpan="7" Content="{Binding SelectedViewModel}"/> 
    </Grid>
</UserControl>
