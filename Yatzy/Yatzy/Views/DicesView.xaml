<Window x:Class="Yatzy.Views.DicesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Yatzy.Views"
        xmlns:models="clr-namespace:Yatzy.Models"
        mc:Ignorable="d"
        Title="DicesView" Height="800" Width="1000">
    <Grid ShowGridLines="True" Background="White">
        
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="7*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="12*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,200,0,0" Width="500">
            <Button x:Name="btnDice1" Command="{Binding SaveDiceCommand}" CommandParameter="1" Content="{Binding Path = Dices[0].DiceValue, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="30">

            </Button>
            <Button x:Name="button1" Command="{Binding SaveDiceCommand}" CommandParameter="2" Content="{Binding Path = Dices[1].DiceValue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="30">
               
            </Button>
            <Button x:Name="button1_Copy" Command="{Binding SaveDiceCommand}" CommandParameter="3" Content="{Binding Path = Dices[2].DiceValue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="30"/>
            <Button x:Name="button1_Copy1" Command="{Binding SaveDiceCommand}" CommandParameter="4" Content="{Binding Path = Dices[3].DiceValue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="30"/>
            <Button x:Name="button1_Copy2" Command="{Binding SaveDiceCommand}" CommandParameter="5" Content="{Binding Path = Dices[4].DiceValue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="30"/>
            <Button x:Name="btnThrow" Command="{Binding RollDicesCommand}" Content="Kasta" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Height="30"/> 
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,250,0,0" Width="500">
            <Button x:Name="btnDice11" Command="{Binding SaveDiceCommand}" CommandParameter="1"  Background="Transparent" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="35">
                <StackPanel>
                    <Image x:Name="picDice11"  Source="{Binding Path = Dices[0].DiceImage, UpdateSourceTrigger=PropertyChanged}"  />
                </StackPanel>
            </Button>
            <Button x:Name="btnDice12" Command="{Binding SaveDiceCommand}" CommandParameter="2" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="35">
                <Image x:Name="picDice12"  Source="/Resources/Images/dice1.png"  />
            </Button>
            <Button x:Name="btnDice13" Command="{Binding SaveDiceCommand}" CommandParameter="3" Content="{Binding Path = Dices[2].DiceValue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="30"/>
            <Button x:Name="btnDice14" Command="{Binding SaveDiceCommand}" CommandParameter="4" Content="{Binding Path = Dices[3].DiceValue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="30"/>
            <Button x:Name="btnDice15" Command="{Binding SaveDiceCommand}" CommandParameter="5" Content="{Binding Path = Dices[4].DiceValue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="35" Height="30"/>
            <Button x:Name="btnDice16" Command="{Binding RollDicesCommand}" Content="Kasta" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Height="30"/>
        </StackPanel>

        <ListView x:Name="listView" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Height="157" Margin="27,24,0,0" VerticalAlignment="Top" Width="199" ItemsSource="{Binding Dices}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="60" Header="Nummer" DisplayMemberBinding="{Binding DiceValue}"/>
                        <GridViewColumn Width="60" Header="Sparad" DisplayMemberBinding="{Binding IsDiceEnabled}"/>
                        <GridViewColumn Width="60" Header="ID" DisplayMemberBinding="{Binding DiceID}"/>
                    </GridView>
                </ListView.View>
            </ListView>
      
        <StackPanel Width="49" Margin="0,0,0,0" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right">
            <Button Name="Empty" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.Ones}" Command="{Binding Ones}" CommandParameter="1" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.Twos}" Command="{Binding Twos}" CommandParameter="2" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.Threes}" Command="{Binding Threes}" CommandParameter="3" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.Fours}" Command="{Binding Fours}" CommandParameter="4" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.Fives}" Command="{Binding Fives}" CommandParameter="5" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.Sixes}" Command="{Binding Sixes}" CommandParameter="6" VerticalAlignment="Top" MinHeight="25"/>
            <Button Name="Empty1" VerticalAlignment="Top" MinHeight="25" Background="Transparent" BorderBrush="Transparent" />
            <Button Name="Empty2" VerticalAlignment="Top" MinHeight="25" Background="Transparent" BorderBrush="Transparent" />
            <Button Content="{Binding Path = Player.Pair}" Command="{Binding Pair}" CommandParameter="7" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.TwoPairs}" Command="{Binding TwoPair}" CommandParameter="8" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.ThreeOfaKind}" Command="{Binding Threeofakind}" CommandParameter="9" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.FourOfaKind}" Command="{Binding Fourofakind}" CommandParameter="10" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.SmalLadder}" Command="{Binding Smallstraight}" CommandParameter="11" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.LargeLadder}" Command="{Binding Largestraight}" CommandParameter="12" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.FullHouse}" Command="{Binding Fullhouse}" CommandParameter="13" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.Chance}" Command="{Binding Chance}" CommandParameter="14" VerticalAlignment="Top" MinHeight="25"/>
            <Button Content="{Binding Path = Player.Yatzy}" Command="{Binding Yatzy}" CommandParameter="15" VerticalAlignment="Top" MinHeight="25"/>

        </StackPanel>
        <!--<StackPanel Width="50" Margin="150,20,0,0" Grid.Column="1" Grid.Row="1">
            <TextBox Text="{Binding Path= activePlayer.Ones}" />
            <TextBox Text="{Binding Path= activePlayer.Twos}" />
            <TextBox Text="{Binding Path= activePlayer.Threes}" />
            <TextBox Text="{Binding Path= activePlayer.Fours}" />
            <TextBox Text="{Binding Path= activePlayer.Fives}" />
            <TextBox Text="{Binding Path= activePlayer.Sixes}" />
            <TextBox Text="{Binding Path= activePlayer.UpperBonus}" />
            <TextBox Text="{Binding Path= activePlayer.Pair}" />
            <TextBox Text="{Binding Path= activePlayer.TwoPairs}" />
            <TextBox Text="{Binding Path= activePlayer.ThreeOfaKind}" />
            <TextBox Text="{Binding Path= activePlayer.FourOfaKind}" />
            <TextBox Text="{Binding Path= activePlayer.SmalLadder}" />
            <TextBox Text="{Binding Path= activePlayer.LargeLadder}" />
            <TextBox Text="{Binding Path= activePlayer.FullHouse}" />
            <TextBox Text="{Binding Path= activePlayer.Chance}" />
            <TextBox Text="{Binding Path= activePlayer.Yatzy}" />
            <TextBox Text="{Binding Path= activePlayer.TotalScore}" Margin="0,30,0,0" />
            <Button Command="{Binding QuitGameCommand}" Content="Avsluta"/>
        </StackPanel> -->
        <Label x:Name="label" Grid.Row="0" Grid.Column="2" Content="{Binding Path = activePlayer.Firstname, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="22,20,0,0" VerticalAlignment="Top"/>
        
        <DataGrid ItemsSource="{Binding Path=ActivePlayers}"  Grid.Column="2" Grid.Row="1" BorderThickness="1" BorderBrush="Black" 
                  IsReadOnly="True" CanUserSortColumns="True" IsHitTestVisible="True" HorizontalAlignment="Left"
                  HorizontalGridLinesBrush="Black" VerticalGridLinesBrush="Black" MinRowHeight="80"  AutoGenerateColumns="False" CanUserAddRows="False"  HeadersVisibility="Column" 
                  ColumnHeaderHeight="25"   >
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1,1,1,1"/>
                </Style>
            </DataGrid.Resources>
                        
        <DataGrid.Columns>
                <DataGridTextColumn Header="Förnamn" Binding="{Binding Firstname}" />
                
                <DataGridTextColumn Header="Ettor" Binding="{Binding Ones}"/>
                <DataGridTextColumn Header="Tvåor" Binding="{Binding Twos}"/>
                <DataGridTextColumn Header="Treor" Binding="{Binding Threes}"/>
                <DataGridTextColumn Header="Fyror" Binding="{Binding Fours}"/>
                <DataGridTextColumn Header="Femmor" Binding="{Binding Fives}"/>
                <DataGridTextColumn Header="Sexor" Binding="{Binding Sixes}"/>
                <DataGridTextColumn Header="Summa" Binding="{Binding UpperScore}"/>
                <DataGridTextColumn Header="Bonus" Binding="{Binding UpperBonus}"/>
                <DataGridTextColumn Header="Par" Binding="{Binding Pair}"/>
                <DataGridTextColumn Header="Två par" Binding="{Binding TwoPairs}"/>
                <DataGridTextColumn Header="Tretal" Binding="{Binding ThreeOfaKind}"/>
                <DataGridTextColumn Header="Fyrtal" Binding="{Binding FourOfaKind}"/>
                <DataGridTextColumn Header="Liten stege" Binding="{Binding SmalLadder}"/>
                <DataGridTextColumn Header="Stor stege" Binding="{Binding LargeLadder}"/>
                <DataGridTextColumn Header="Kåk" Binding="{Binding FullHouse}"/>
                <DataGridTextColumn Header="Chans" Binding="{Binding Chanse}"/>
                <DataGridTextColumn Header="Yatzy" Binding="{Binding Yatzy}"/>
                <DataGridTextColumn Header="Total summa" Binding="{Binding TotalScore}"/>
            </DataGrid.Columns>

            <!--Konverterar kolumnerna så de visas vertikalt istället för horisontellt-->
            <DataGrid.LayoutTransform>
                <TransformGroup>
                    <RotateTransform Angle="90"/>
                    <MatrixTransform Matrix="-1,0,0,1,0,0"/>
                </TransformGroup>
            </DataGrid.LayoutTransform>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <RotateTransform Angle="-90"/>
                                <ScaleTransform ScaleX="1" ScaleY="-1" />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle  >
                <Style TargetType="DataGridCell">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <RotateTransform Angle="-90"/>
                                <ScaleTransform ScaleX="1" ScaleY="-1" />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>

    </Grid>
</Window>
